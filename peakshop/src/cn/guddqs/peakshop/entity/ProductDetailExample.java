package cn.guddqs.peakshop.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ProductDetailExample {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table product_detail
	 * @abatorgenerated  Fri Jan 25 20:43:10 CST 2019
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table product_detail
	 * @abatorgenerated  Fri Jan 25 20:43:10 CST 2019
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table product_detail
	 * @abatorgenerated  Fri Jan 25 20:43:10 CST 2019
	 */
	public ProductDetailExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table product_detail
	 * @abatorgenerated  Fri Jan 25 20:43:10 CST 2019
	 */
	protected ProductDetailExample(ProductDetailExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table product_detail
	 * @abatorgenerated  Fri Jan 25 20:43:10 CST 2019
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table product_detail
	 * @abatorgenerated  Fri Jan 25 20:43:10 CST 2019
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table product_detail
	 * @abatorgenerated  Fri Jan 25 20:43:10 CST 2019
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table product_detail
	 * @abatorgenerated  Fri Jan 25 20:43:10 CST 2019
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table product_detail
	 * @abatorgenerated  Fri Jan 25 20:43:10 CST 2019
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table product_detail
	 * @abatorgenerated  Fri Jan 25 20:43:10 CST 2019
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table product_detail
	 * @abatorgenerated  Fri Jan 25 20:43:10 CST 2019
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table product_detail
	 * @abatorgenerated  Fri Jan 25 20:43:10 CST 2019
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andProductIdIsNull() {
			addCriterion("product_id is null");
			return this;
		}

		public Criteria andProductIdIsNotNull() {
			addCriterion("product_id is not null");
			return this;
		}

		public Criteria andProductIdEqualTo(Integer value) {
			addCriterion("product_id =", value, "productId");
			return this;
		}

		public Criteria andProductIdNotEqualTo(Integer value) {
			addCriterion("product_id <>", value, "productId");
			return this;
		}

		public Criteria andProductIdGreaterThan(Integer value) {
			addCriterion("product_id >", value, "productId");
			return this;
		}

		public Criteria andProductIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("product_id >=", value, "productId");
			return this;
		}

		public Criteria andProductIdLessThan(Integer value) {
			addCriterion("product_id <", value, "productId");
			return this;
		}

		public Criteria andProductIdLessThanOrEqualTo(Integer value) {
			addCriterion("product_id <=", value, "productId");
			return this;
		}

		public Criteria andProductIdIn(List values) {
			addCriterion("product_id in", values, "productId");
			return this;
		}

		public Criteria andProductIdNotIn(List values) {
			addCriterion("product_id not in", values, "productId");
			return this;
		}

		public Criteria andProductIdBetween(Integer value1, Integer value2) {
			addCriterion("product_id between", value1, value2, "productId");
			return this;
		}

		public Criteria andProductIdNotBetween(Integer value1, Integer value2) {
			addCriterion("product_id not between", value1, value2, "productId");
			return this;
		}

		public Criteria andPictureIsNull() {
			addCriterion("picture is null");
			return this;
		}

		public Criteria andPictureIsNotNull() {
			addCriterion("picture is not null");
			return this;
		}

		public Criteria andPictureEqualTo(String value) {
			addCriterion("picture =", value, "picture");
			return this;
		}

		public Criteria andPictureNotEqualTo(String value) {
			addCriterion("picture <>", value, "picture");
			return this;
		}

		public Criteria andPictureGreaterThan(String value) {
			addCriterion("picture >", value, "picture");
			return this;
		}

		public Criteria andPictureGreaterThanOrEqualTo(String value) {
			addCriterion("picture >=", value, "picture");
			return this;
		}

		public Criteria andPictureLessThan(String value) {
			addCriterion("picture <", value, "picture");
			return this;
		}

		public Criteria andPictureLessThanOrEqualTo(String value) {
			addCriterion("picture <=", value, "picture");
			return this;
		}

		public Criteria andPictureLike(String value) {
			addCriterion("picture like", value, "picture");
			return this;
		}

		public Criteria andPictureNotLike(String value) {
			addCriterion("picture not like", value, "picture");
			return this;
		}

		public Criteria andPictureIn(List values) {
			addCriterion("picture in", values, "picture");
			return this;
		}

		public Criteria andPictureNotIn(List values) {
			addCriterion("picture not in", values, "picture");
			return this;
		}

		public Criteria andPictureBetween(String value1, String value2) {
			addCriterion("picture between", value1, value2, "picture");
			return this;
		}

		public Criteria andPictureNotBetween(String value1, String value2) {
			addCriterion("picture not between", value1, value2, "picture");
			return this;
		}

		public Criteria andStartTimeIsNull() {
			addCriterion("start_time is null");
			return this;
		}

		public Criteria andStartTimeIsNotNull() {
			addCriterion("start_time is not null");
			return this;
		}

		public Criteria andStartTimeEqualTo(Date value) {
			addCriterion("start_time =", value, "startTime");
			return this;
		}

		public Criteria andStartTimeNotEqualTo(Date value) {
			addCriterion("start_time <>", value, "startTime");
			return this;
		}

		public Criteria andStartTimeGreaterThan(Date value) {
			addCriterion("start_time >", value, "startTime");
			return this;
		}

		public Criteria andStartTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("start_time >=", value, "startTime");
			return this;
		}

		public Criteria andStartTimeLessThan(Date value) {
			addCriterion("start_time <", value, "startTime");
			return this;
		}

		public Criteria andStartTimeLessThanOrEqualTo(Date value) {
			addCriterion("start_time <=", value, "startTime");
			return this;
		}

		public Criteria andStartTimeIn(List values) {
			addCriterion("start_time in", values, "startTime");
			return this;
		}

		public Criteria andStartTimeNotIn(List values) {
			addCriterion("start_time not in", values, "startTime");
			return this;
		}

		public Criteria andStartTimeBetween(Date value1, Date value2) {
			addCriterion("start_time between", value1, value2, "startTime");
			return this;
		}

		public Criteria andStartTimeNotBetween(Date value1, Date value2) {
			addCriterion("start_time not between", value1, value2, "startTime");
			return this;
		}

		public Criteria andEditTimeIsNull() {
			addCriterion("edit_time is null");
			return this;
		}

		public Criteria andEditTimeIsNotNull() {
			addCriterion("edit_time is not null");
			return this;
		}

		public Criteria andEditTimeEqualTo(Date value) {
			addCriterion("edit_time =", value, "editTime");
			return this;
		}

		public Criteria andEditTimeNotEqualTo(Date value) {
			addCriterion("edit_time <>", value, "editTime");
			return this;
		}

		public Criteria andEditTimeGreaterThan(Date value) {
			addCriterion("edit_time >", value, "editTime");
			return this;
		}

		public Criteria andEditTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("edit_time >=", value, "editTime");
			return this;
		}

		public Criteria andEditTimeLessThan(Date value) {
			addCriterion("edit_time <", value, "editTime");
			return this;
		}

		public Criteria andEditTimeLessThanOrEqualTo(Date value) {
			addCriterion("edit_time <=", value, "editTime");
			return this;
		}

		public Criteria andEditTimeIn(List values) {
			addCriterion("edit_time in", values, "editTime");
			return this;
		}

		public Criteria andEditTimeNotIn(List values) {
			addCriterion("edit_time not in", values, "editTime");
			return this;
		}

		public Criteria andEditTimeBetween(Date value1, Date value2) {
			addCriterion("edit_time between", value1, value2, "editTime");
			return this;
		}

		public Criteria andEditTimeNotBetween(Date value1, Date value2) {
			addCriterion("edit_time not between", value1, value2, "editTime");
			return this;
		}
	}
}