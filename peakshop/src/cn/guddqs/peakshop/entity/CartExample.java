package cn.guddqs.peakshop.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CartExample {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table cart
	 * @abatorgenerated  Fri Jan 25 20:43:09 CST 2019
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table cart
	 * @abatorgenerated  Fri Jan 25 20:43:09 CST 2019
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table cart
	 * @abatorgenerated  Fri Jan 25 20:43:09 CST 2019
	 */
	public CartExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table cart
	 * @abatorgenerated  Fri Jan 25 20:43:09 CST 2019
	 */
	protected CartExample(CartExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table cart
	 * @abatorgenerated  Fri Jan 25 20:43:09 CST 2019
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table cart
	 * @abatorgenerated  Fri Jan 25 20:43:09 CST 2019
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table cart
	 * @abatorgenerated  Fri Jan 25 20:43:09 CST 2019
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table cart
	 * @abatorgenerated  Fri Jan 25 20:43:09 CST 2019
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table cart
	 * @abatorgenerated  Fri Jan 25 20:43:09 CST 2019
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table cart
	 * @abatorgenerated  Fri Jan 25 20:43:09 CST 2019
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table cart
	 * @abatorgenerated  Fri Jan 25 20:43:09 CST 2019
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table cart
	 * @abatorgenerated  Fri Jan 25 20:43:09 CST 2019
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andProductIdIsNull() {
			addCriterion("product_id is null");
			return this;
		}

		public Criteria andProductIdIsNotNull() {
			addCriterion("product_id is not null");
			return this;
		}

		public Criteria andProductIdEqualTo(Integer value) {
			addCriterion("product_id =", value, "productId");
			return this;
		}

		public Criteria andProductIdNotEqualTo(Integer value) {
			addCriterion("product_id <>", value, "productId");
			return this;
		}

		public Criteria andProductIdGreaterThan(Integer value) {
			addCriterion("product_id >", value, "productId");
			return this;
		}

		public Criteria andProductIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("product_id >=", value, "productId");
			return this;
		}

		public Criteria andProductIdLessThan(Integer value) {
			addCriterion("product_id <", value, "productId");
			return this;
		}

		public Criteria andProductIdLessThanOrEqualTo(Integer value) {
			addCriterion("product_id <=", value, "productId");
			return this;
		}

		public Criteria andProductIdIn(List values) {
			addCriterion("product_id in", values, "productId");
			return this;
		}

		public Criteria andProductIdNotIn(List values) {
			addCriterion("product_id not in", values, "productId");
			return this;
		}

		public Criteria andProductIdBetween(Integer value1, Integer value2) {
			addCriterion("product_id between", value1, value2, "productId");
			return this;
		}

		public Criteria andProductIdNotBetween(Integer value1, Integer value2) {
			addCriterion("product_id not between", value1, value2, "productId");
			return this;
		}

		public Criteria andColorIdIsNull() {
			addCriterion("color_id is null");
			return this;
		}

		public Criteria andColorIdIsNotNull() {
			addCriterion("color_id is not null");
			return this;
		}

		public Criteria andColorIdEqualTo(Integer value) {
			addCriterion("color_id =", value, "colorId");
			return this;
		}

		public Criteria andColorIdNotEqualTo(Integer value) {
			addCriterion("color_id <>", value, "colorId");
			return this;
		}

		public Criteria andColorIdGreaterThan(Integer value) {
			addCriterion("color_id >", value, "colorId");
			return this;
		}

		public Criteria andColorIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("color_id >=", value, "colorId");
			return this;
		}

		public Criteria andColorIdLessThan(Integer value) {
			addCriterion("color_id <", value, "colorId");
			return this;
		}

		public Criteria andColorIdLessThanOrEqualTo(Integer value) {
			addCriterion("color_id <=", value, "colorId");
			return this;
		}

		public Criteria andColorIdIn(List values) {
			addCriterion("color_id in", values, "colorId");
			return this;
		}

		public Criteria andColorIdNotIn(List values) {
			addCriterion("color_id not in", values, "colorId");
			return this;
		}

		public Criteria andColorIdBetween(Integer value1, Integer value2) {
			addCriterion("color_id between", value1, value2, "colorId");
			return this;
		}

		public Criteria andColorIdNotBetween(Integer value1, Integer value2) {
			addCriterion("color_id not between", value1, value2, "colorId");
			return this;
		}

		public Criteria andSizeIdIsNull() {
			addCriterion("size_id is null");
			return this;
		}

		public Criteria andSizeIdIsNotNull() {
			addCriterion("size_id is not null");
			return this;
		}

		public Criteria andSizeIdEqualTo(Integer value) {
			addCriterion("size_id =", value, "sizeId");
			return this;
		}

		public Criteria andSizeIdNotEqualTo(Integer value) {
			addCriterion("size_id <>", value, "sizeId");
			return this;
		}

		public Criteria andSizeIdGreaterThan(Integer value) {
			addCriterion("size_id >", value, "sizeId");
			return this;
		}

		public Criteria andSizeIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("size_id >=", value, "sizeId");
			return this;
		}

		public Criteria andSizeIdLessThan(Integer value) {
			addCriterion("size_id <", value, "sizeId");
			return this;
		}

		public Criteria andSizeIdLessThanOrEqualTo(Integer value) {
			addCriterion("size_id <=", value, "sizeId");
			return this;
		}

		public Criteria andSizeIdIn(List values) {
			addCriterion("size_id in", values, "sizeId");
			return this;
		}

		public Criteria andSizeIdNotIn(List values) {
			addCriterion("size_id not in", values, "sizeId");
			return this;
		}

		public Criteria andSizeIdBetween(Integer value1, Integer value2) {
			addCriterion("size_id between", value1, value2, "sizeId");
			return this;
		}

		public Criteria andSizeIdNotBetween(Integer value1, Integer value2) {
			addCriterion("size_id not between", value1, value2, "sizeId");
			return this;
		}

		public Criteria andNumberIsNull() {
			addCriterion("number is null");
			return this;
		}

		public Criteria andNumberIsNotNull() {
			addCriterion("number is not null");
			return this;
		}

		public Criteria andNumberEqualTo(Integer value) {
			addCriterion("number =", value, "number");
			return this;
		}

		public Criteria andNumberNotEqualTo(Integer value) {
			addCriterion("number <>", value, "number");
			return this;
		}

		public Criteria andNumberGreaterThan(Integer value) {
			addCriterion("number >", value, "number");
			return this;
		}

		public Criteria andNumberGreaterThanOrEqualTo(Integer value) {
			addCriterion("number >=", value, "number");
			return this;
		}

		public Criteria andNumberLessThan(Integer value) {
			addCriterion("number <", value, "number");
			return this;
		}

		public Criteria andNumberLessThanOrEqualTo(Integer value) {
			addCriterion("number <=", value, "number");
			return this;
		}

		public Criteria andNumberIn(List values) {
			addCriterion("number in", values, "number");
			return this;
		}

		public Criteria andNumberNotIn(List values) {
			addCriterion("number not in", values, "number");
			return this;
		}

		public Criteria andNumberBetween(Integer value1, Integer value2) {
			addCriterion("number between", value1, value2, "number");
			return this;
		}

		public Criteria andNumberNotBetween(Integer value1, Integer value2) {
			addCriterion("number not between", value1, value2, "number");
			return this;
		}

		public Criteria andModeIsNull() {
			addCriterion("mode is null");
			return this;
		}

		public Criteria andModeIsNotNull() {
			addCriterion("mode is not null");
			return this;
		}

		public Criteria andModeEqualTo(Integer value) {
			addCriterion("mode =", value, "mode");
			return this;
		}

		public Criteria andModeNotEqualTo(Integer value) {
			addCriterion("mode <>", value, "mode");
			return this;
		}

		public Criteria andModeGreaterThan(Integer value) {
			addCriterion("mode >", value, "mode");
			return this;
		}

		public Criteria andModeGreaterThanOrEqualTo(Integer value) {
			addCriterion("mode >=", value, "mode");
			return this;
		}

		public Criteria andModeLessThan(Integer value) {
			addCriterion("mode <", value, "mode");
			return this;
		}

		public Criteria andModeLessThanOrEqualTo(Integer value) {
			addCriterion("mode <=", value, "mode");
			return this;
		}

		public Criteria andModeIn(List values) {
			addCriterion("mode in", values, "mode");
			return this;
		}

		public Criteria andModeNotIn(List values) {
			addCriterion("mode not in", values, "mode");
			return this;
		}

		public Criteria andModeBetween(Integer value1, Integer value2) {
			addCriterion("mode between", value1, value2, "mode");
			return this;
		}

		public Criteria andModeNotBetween(Integer value1, Integer value2) {
			addCriterion("mode not between", value1, value2, "mode");
			return this;
		}

		public Criteria andCheckedIsNull() {
			addCriterion("checked is null");
			return this;
		}

		public Criteria andCheckedIsNotNull() {
			addCriterion("checked is not null");
			return this;
		}

		public Criteria andCheckedEqualTo(Boolean value) {
			addCriterion("checked =", value, "checked");
			return this;
		}

		public Criteria andCheckedNotEqualTo(Boolean value) {
			addCriterion("checked <>", value, "checked");
			return this;
		}

		public Criteria andCheckedGreaterThan(Boolean value) {
			addCriterion("checked >", value, "checked");
			return this;
		}

		public Criteria andCheckedGreaterThanOrEqualTo(Boolean value) {
			addCriterion("checked >=", value, "checked");
			return this;
		}

		public Criteria andCheckedLessThan(Boolean value) {
			addCriterion("checked <", value, "checked");
			return this;
		}

		public Criteria andCheckedLessThanOrEqualTo(Boolean value) {
			addCriterion("checked <=", value, "checked");
			return this;
		}

		public Criteria andCheckedIn(List values) {
			addCriterion("checked in", values, "checked");
			return this;
		}

		public Criteria andCheckedNotIn(List values) {
			addCriterion("checked not in", values, "checked");
			return this;
		}

		public Criteria andCheckedBetween(Boolean value1, Boolean value2) {
			addCriterion("checked between", value1, value2, "checked");
			return this;
		}

		public Criteria andCheckedNotBetween(Boolean value1, Boolean value2) {
			addCriterion("checked not between", value1, value2, "checked");
			return this;
		}

		public Criteria andAddTimeIsNull() {
			addCriterion("add_time is null");
			return this;
		}

		public Criteria andAddTimeIsNotNull() {
			addCriterion("add_time is not null");
			return this;
		}

		public Criteria andAddTimeEqualTo(Date value) {
			addCriterion("add_time =", value, "addTime");
			return this;
		}

		public Criteria andAddTimeNotEqualTo(Date value) {
			addCriterion("add_time <>", value, "addTime");
			return this;
		}

		public Criteria andAddTimeGreaterThan(Date value) {
			addCriterion("add_time >", value, "addTime");
			return this;
		}

		public Criteria andAddTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("add_time >=", value, "addTime");
			return this;
		}

		public Criteria andAddTimeLessThan(Date value) {
			addCriterion("add_time <", value, "addTime");
			return this;
		}

		public Criteria andAddTimeLessThanOrEqualTo(Date value) {
			addCriterion("add_time <=", value, "addTime");
			return this;
		}

		public Criteria andAddTimeIn(List values) {
			addCriterion("add_time in", values, "addTime");
			return this;
		}

		public Criteria andAddTimeNotIn(List values) {
			addCriterion("add_time not in", values, "addTime");
			return this;
		}

		public Criteria andAddTimeBetween(Date value1, Date value2) {
			addCriterion("add_time between", value1, value2, "addTime");
			return this;
		}

		public Criteria andAddTimeNotBetween(Date value1, Date value2) {
			addCriterion("add_time not between", value1, value2, "addTime");
			return this;
		}

		public Criteria andEditTimeIsNull() {
			addCriterion("edit_time is null");
			return this;
		}

		public Criteria andEditTimeIsNotNull() {
			addCriterion("edit_time is not null");
			return this;
		}

		public Criteria andEditTimeEqualTo(Date value) {
			addCriterion("edit_time =", value, "editTime");
			return this;
		}

		public Criteria andEditTimeNotEqualTo(Date value) {
			addCriterion("edit_time <>", value, "editTime");
			return this;
		}

		public Criteria andEditTimeGreaterThan(Date value) {
			addCriterion("edit_time >", value, "editTime");
			return this;
		}

		public Criteria andEditTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("edit_time >=", value, "editTime");
			return this;
		}

		public Criteria andEditTimeLessThan(Date value) {
			addCriterion("edit_time <", value, "editTime");
			return this;
		}

		public Criteria andEditTimeLessThanOrEqualTo(Date value) {
			addCriterion("edit_time <=", value, "editTime");
			return this;
		}

		public Criteria andEditTimeIn(List values) {
			addCriterion("edit_time in", values, "editTime");
			return this;
		}

		public Criteria andEditTimeNotIn(List values) {
			addCriterion("edit_time not in", values, "editTime");
			return this;
		}

		public Criteria andEditTimeBetween(Date value1, Date value2) {
			addCriterion("edit_time between", value1, value2, "editTime");
			return this;
		}

		public Criteria andEditTimeNotBetween(Date value1, Date value2) {
			addCriterion("edit_time not between", value1, value2, "editTime");
			return this;
		}

		public Criteria andUserIdIsNull() {
			addCriterion("user_id is null");
			return this;
		}

		public Criteria andUserIdIsNotNull() {
			addCriterion("user_id is not null");
			return this;
		}

		public Criteria andUserIdEqualTo(Integer value) {
			addCriterion("user_id =", value, "userId");
			return this;
		}

		public Criteria andUserIdNotEqualTo(Integer value) {
			addCriterion("user_id <>", value, "userId");
			return this;
		}

		public Criteria andUserIdGreaterThan(Integer value) {
			addCriterion("user_id >", value, "userId");
			return this;
		}

		public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("user_id >=", value, "userId");
			return this;
		}

		public Criteria andUserIdLessThan(Integer value) {
			addCriterion("user_id <", value, "userId");
			return this;
		}

		public Criteria andUserIdLessThanOrEqualTo(Integer value) {
			addCriterion("user_id <=", value, "userId");
			return this;
		}

		public Criteria andUserIdIn(List values) {
			addCriterion("user_id in", values, "userId");
			return this;
		}

		public Criteria andUserIdNotIn(List values) {
			addCriterion("user_id not in", values, "userId");
			return this;
		}

		public Criteria andUserIdBetween(Integer value1, Integer value2) {
			addCriterion("user_id between", value1, value2, "userId");
			return this;
		}

		public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
			addCriterion("user_id not between", value1, value2, "userId");
			return this;
		}
	}
}