package cn.guddqs.peakshop.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Iterator;

public class AddressInfoExample {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table address_info
	 * @abatorgenerated  Fri Jan 25 20:43:09 CST 2019
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table address_info
	 * @abatorgenerated  Fri Jan 25 20:43:09 CST 2019
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table address_info
	 * @abatorgenerated  Fri Jan 25 20:43:09 CST 2019
	 */
	public AddressInfoExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table address_info
	 * @abatorgenerated  Fri Jan 25 20:43:09 CST 2019
	 */
	protected AddressInfoExample(AddressInfoExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table address_info
	 * @abatorgenerated  Fri Jan 25 20:43:09 CST 2019
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table address_info
	 * @abatorgenerated  Fri Jan 25 20:43:09 CST 2019
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table address_info
	 * @abatorgenerated  Fri Jan 25 20:43:09 CST 2019
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table address_info
	 * @abatorgenerated  Fri Jan 25 20:43:09 CST 2019
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table address_info
	 * @abatorgenerated  Fri Jan 25 20:43:09 CST 2019
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table address_info
	 * @abatorgenerated  Fri Jan 25 20:43:09 CST 2019
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table address_info
	 * @abatorgenerated  Fri Jan 25 20:43:09 CST 2019
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table address_info
	 * @abatorgenerated  Fri Jan 25 20:43:09 CST 2019
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List dateList = new ArrayList();
			Iterator iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andUserIdIsNull() {
			addCriterion("user_id is null");
			return this;
		}

		public Criteria andUserIdIsNotNull() {
			addCriterion("user_id is not null");
			return this;
		}

		public Criteria andUserIdEqualTo(Integer value) {
			addCriterion("user_id =", value, "userId");
			return this;
		}

		public Criteria andUserIdNotEqualTo(Integer value) {
			addCriterion("user_id <>", value, "userId");
			return this;
		}

		public Criteria andUserIdGreaterThan(Integer value) {
			addCriterion("user_id >", value, "userId");
			return this;
		}

		public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("user_id >=", value, "userId");
			return this;
		}

		public Criteria andUserIdLessThan(Integer value) {
			addCriterion("user_id <", value, "userId");
			return this;
		}

		public Criteria andUserIdLessThanOrEqualTo(Integer value) {
			addCriterion("user_id <=", value, "userId");
			return this;
		}

		public Criteria andUserIdIn(List values) {
			addCriterion("user_id in", values, "userId");
			return this;
		}

		public Criteria andUserIdNotIn(List values) {
			addCriterion("user_id not in", values, "userId");
			return this;
		}

		public Criteria andUserIdBetween(Integer value1, Integer value2) {
			addCriterion("user_id between", value1, value2, "userId");
			return this;
		}

		public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
			addCriterion("user_id not between", value1, value2, "userId");
			return this;
		}

		public Criteria andNameIsNull() {
			addCriterion("name is null");
			return this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("name is not null");
			return this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("name =", value, "name");
			return this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("name <>", value, "name");
			return this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("name >", value, "name");
			return this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("name >=", value, "name");
			return this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("name <", value, "name");
			return this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("name <=", value, "name");
			return this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("name like", value, "name");
			return this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("name not like", value, "name");
			return this;
		}

		public Criteria andNameIn(List values) {
			addCriterion("name in", values, "name");
			return this;
		}

		public Criteria andNameNotIn(List values) {
			addCriterion("name not in", values, "name");
			return this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("name between", value1, value2, "name");
			return this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("name not between", value1, value2, "name");
			return this;
		}

		public Criteria andPhoneIsNull() {
			addCriterion("phone is null");
			return this;
		}

		public Criteria andPhoneIsNotNull() {
			addCriterion("phone is not null");
			return this;
		}

		public Criteria andPhoneEqualTo(String value) {
			addCriterion("phone =", value, "phone");
			return this;
		}

		public Criteria andPhoneNotEqualTo(String value) {
			addCriterion("phone <>", value, "phone");
			return this;
		}

		public Criteria andPhoneGreaterThan(String value) {
			addCriterion("phone >", value, "phone");
			return this;
		}

		public Criteria andPhoneGreaterThanOrEqualTo(String value) {
			addCriterion("phone >=", value, "phone");
			return this;
		}

		public Criteria andPhoneLessThan(String value) {
			addCriterion("phone <", value, "phone");
			return this;
		}

		public Criteria andPhoneLessThanOrEqualTo(String value) {
			addCriterion("phone <=", value, "phone");
			return this;
		}

		public Criteria andPhoneLike(String value) {
			addCriterion("phone like", value, "phone");
			return this;
		}

		public Criteria andPhoneNotLike(String value) {
			addCriterion("phone not like", value, "phone");
			return this;
		}

		public Criteria andPhoneIn(List values) {
			addCriterion("phone in", values, "phone");
			return this;
		}

		public Criteria andPhoneNotIn(List values) {
			addCriterion("phone not in", values, "phone");
			return this;
		}

		public Criteria andPhoneBetween(String value1, String value2) {
			addCriterion("phone between", value1, value2, "phone");
			return this;
		}

		public Criteria andPhoneNotBetween(String value1, String value2) {
			addCriterion("phone not between", value1, value2, "phone");
			return this;
		}

		public Criteria andPostNoIsNull() {
			addCriterion("post_no is null");
			return this;
		}

		public Criteria andPostNoIsNotNull() {
			addCriterion("post_no is not null");
			return this;
		}

		public Criteria andPostNoEqualTo(String value) {
			addCriterion("post_no =", value, "postNo");
			return this;
		}

		public Criteria andPostNoNotEqualTo(String value) {
			addCriterion("post_no <>", value, "postNo");
			return this;
		}

		public Criteria andPostNoGreaterThan(String value) {
			addCriterion("post_no >", value, "postNo");
			return this;
		}

		public Criteria andPostNoGreaterThanOrEqualTo(String value) {
			addCriterion("post_no >=", value, "postNo");
			return this;
		}

		public Criteria andPostNoLessThan(String value) {
			addCriterion("post_no <", value, "postNo");
			return this;
		}

		public Criteria andPostNoLessThanOrEqualTo(String value) {
			addCriterion("post_no <=", value, "postNo");
			return this;
		}

		public Criteria andPostNoLike(String value) {
			addCriterion("post_no like", value, "postNo");
			return this;
		}

		public Criteria andPostNoNotLike(String value) {
			addCriterion("post_no not like", value, "postNo");
			return this;
		}

		public Criteria andPostNoIn(List values) {
			addCriterion("post_no in", values, "postNo");
			return this;
		}

		public Criteria andPostNoNotIn(List values) {
			addCriterion("post_no not in", values, "postNo");
			return this;
		}

		public Criteria andPostNoBetween(String value1, String value2) {
			addCriterion("post_no between", value1, value2, "postNo");
			return this;
		}

		public Criteria andPostNoNotBetween(String value1, String value2) {
			addCriterion("post_no not between", value1, value2, "postNo");
			return this;
		}

		public Criteria andAddressIsNull() {
			addCriterion("address is null");
			return this;
		}

		public Criteria andAddressIsNotNull() {
			addCriterion("address is not null");
			return this;
		}

		public Criteria andAddressEqualTo(String value) {
			addCriterion("address =", value, "address");
			return this;
		}

		public Criteria andAddressNotEqualTo(String value) {
			addCriterion("address <>", value, "address");
			return this;
		}

		public Criteria andAddressGreaterThan(String value) {
			addCriterion("address >", value, "address");
			return this;
		}

		public Criteria andAddressGreaterThanOrEqualTo(String value) {
			addCriterion("address >=", value, "address");
			return this;
		}

		public Criteria andAddressLessThan(String value) {
			addCriterion("address <", value, "address");
			return this;
		}

		public Criteria andAddressLessThanOrEqualTo(String value) {
			addCriterion("address <=", value, "address");
			return this;
		}

		public Criteria andAddressLike(String value) {
			addCriterion("address like", value, "address");
			return this;
		}

		public Criteria andAddressNotLike(String value) {
			addCriterion("address not like", value, "address");
			return this;
		}

		public Criteria andAddressIn(List values) {
			addCriterion("address in", values, "address");
			return this;
		}

		public Criteria andAddressNotIn(List values) {
			addCriterion("address not in", values, "address");
			return this;
		}

		public Criteria andAddressBetween(String value1, String value2) {
			addCriterion("address between", value1, value2, "address");
			return this;
		}

		public Criteria andAddressNotBetween(String value1, String value2) {
			addCriterion("address not between", value1, value2, "address");
			return this;
		}

		public Criteria andStartTimeIsNull() {
			addCriterion("start_time is null");
			return this;
		}

		public Criteria andStartTimeIsNotNull() {
			addCriterion("start_time is not null");
			return this;
		}

		public Criteria andStartTimeEqualTo(Date value) {
			addCriterionForJDBCDate("start_time =", value, "startTime");
			return this;
		}

		public Criteria andStartTimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("start_time <>", value, "startTime");
			return this;
		}

		public Criteria andStartTimeGreaterThan(Date value) {
			addCriterionForJDBCDate("start_time >", value, "startTime");
			return this;
		}

		public Criteria andStartTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("start_time >=", value, "startTime");
			return this;
		}

		public Criteria andStartTimeLessThan(Date value) {
			addCriterionForJDBCDate("start_time <", value, "startTime");
			return this;
		}

		public Criteria andStartTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("start_time <=", value, "startTime");
			return this;
		}

		public Criteria andStartTimeIn(List values) {
			addCriterionForJDBCDate("start_time in", values, "startTime");
			return this;
		}

		public Criteria andStartTimeNotIn(List values) {
			addCriterionForJDBCDate("start_time not in", values, "startTime");
			return this;
		}

		public Criteria andStartTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("start_time between", value1, value2,
					"startTime");
			return this;
		}

		public Criteria andStartTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("start_time not between", value1, value2,
					"startTime");
			return this;
		}

		public Criteria andEndTimeIsNull() {
			addCriterion("end_time is null");
			return this;
		}

		public Criteria andEndTimeIsNotNull() {
			addCriterion("end_time is not null");
			return this;
		}

		public Criteria andEndTimeEqualTo(Date value) {
			addCriterionForJDBCDate("end_time =", value, "endTime");
			return this;
		}

		public Criteria andEndTimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("end_time <>", value, "endTime");
			return this;
		}

		public Criteria andEndTimeGreaterThan(Date value) {
			addCriterionForJDBCDate("end_time >", value, "endTime");
			return this;
		}

		public Criteria andEndTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("end_time >=", value, "endTime");
			return this;
		}

		public Criteria andEndTimeLessThan(Date value) {
			addCriterionForJDBCDate("end_time <", value, "endTime");
			return this;
		}

		public Criteria andEndTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("end_time <=", value, "endTime");
			return this;
		}

		public Criteria andEndTimeIn(List values) {
			addCriterionForJDBCDate("end_time in", values, "endTime");
			return this;
		}

		public Criteria andEndTimeNotIn(List values) {
			addCriterionForJDBCDate("end_time not in", values, "endTime");
			return this;
		}

		public Criteria andEndTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("end_time between", value1, value2,
					"endTime");
			return this;
		}

		public Criteria andEndTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("end_time not between", value1, value2,
					"endTime");
			return this;
		}

		public Criteria andIsDefaultIsNull() {
			addCriterion("is_default is null");
			return this;
		}

		public Criteria andIsDefaultIsNotNull() {
			addCriterion("is_default is not null");
			return this;
		}

		public Criteria andIsDefaultEqualTo(Boolean value) {
			addCriterion("is_default =", value, "isDefault");
			return this;
		}

		public Criteria andIsDefaultNotEqualTo(Boolean value) {
			addCriterion("is_default <>", value, "isDefault");
			return this;
		}

		public Criteria andIsDefaultGreaterThan(Boolean value) {
			addCriterion("is_default >", value, "isDefault");
			return this;
		}

		public Criteria andIsDefaultGreaterThanOrEqualTo(Boolean value) {
			addCriterion("is_default >=", value, "isDefault");
			return this;
		}

		public Criteria andIsDefaultLessThan(Boolean value) {
			addCriterion("is_default <", value, "isDefault");
			return this;
		}

		public Criteria andIsDefaultLessThanOrEqualTo(Boolean value) {
			addCriterion("is_default <=", value, "isDefault");
			return this;
		}

		public Criteria andIsDefaultIn(List values) {
			addCriterion("is_default in", values, "isDefault");
			return this;
		}

		public Criteria andIsDefaultNotIn(List values) {
			addCriterion("is_default not in", values, "isDefault");
			return this;
		}

		public Criteria andIsDefaultBetween(Boolean value1, Boolean value2) {
			addCriterion("is_default between", value1, value2, "isDefault");
			return this;
		}

		public Criteria andIsDefaultNotBetween(Boolean value1, Boolean value2) {
			addCriterion("is_default not between", value1, value2, "isDefault");
			return this;
		}
	}
}