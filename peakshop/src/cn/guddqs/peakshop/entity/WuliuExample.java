package cn.guddqs.peakshop.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Iterator;

public class WuliuExample {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table wuliu
	 * @abatorgenerated  Fri Jan 25 20:43:10 CST 2019
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table wuliu
	 * @abatorgenerated  Fri Jan 25 20:43:10 CST 2019
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table wuliu
	 * @abatorgenerated  Fri Jan 25 20:43:10 CST 2019
	 */
	public WuliuExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table wuliu
	 * @abatorgenerated  Fri Jan 25 20:43:10 CST 2019
	 */
	protected WuliuExample(WuliuExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table wuliu
	 * @abatorgenerated  Fri Jan 25 20:43:10 CST 2019
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table wuliu
	 * @abatorgenerated  Fri Jan 25 20:43:10 CST 2019
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table wuliu
	 * @abatorgenerated  Fri Jan 25 20:43:10 CST 2019
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table wuliu
	 * @abatorgenerated  Fri Jan 25 20:43:10 CST 2019
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table wuliu
	 * @abatorgenerated  Fri Jan 25 20:43:10 CST 2019
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table wuliu
	 * @abatorgenerated  Fri Jan 25 20:43:10 CST 2019
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table wuliu
	 * @abatorgenerated  Fri Jan 25 20:43:10 CST 2019
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table wuliu
	 * @abatorgenerated  Fri Jan 25 20:43:10 CST 2019
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List dateList = new ArrayList();
			Iterator iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andWuliuNumberIsNull() {
			addCriterion("wuliu_number is null");
			return this;
		}

		public Criteria andWuliuNumberIsNotNull() {
			addCriterion("wuliu_number is not null");
			return this;
		}

		public Criteria andWuliuNumberEqualTo(String value) {
			addCriterion("wuliu_number =", value, "wuliuNumber");
			return this;
		}

		public Criteria andWuliuNumberNotEqualTo(String value) {
			addCriterion("wuliu_number <>", value, "wuliuNumber");
			return this;
		}

		public Criteria andWuliuNumberGreaterThan(String value) {
			addCriterion("wuliu_number >", value, "wuliuNumber");
			return this;
		}

		public Criteria andWuliuNumberGreaterThanOrEqualTo(String value) {
			addCriterion("wuliu_number >=", value, "wuliuNumber");
			return this;
		}

		public Criteria andWuliuNumberLessThan(String value) {
			addCriterion("wuliu_number <", value, "wuliuNumber");
			return this;
		}

		public Criteria andWuliuNumberLessThanOrEqualTo(String value) {
			addCriterion("wuliu_number <=", value, "wuliuNumber");
			return this;
		}

		public Criteria andWuliuNumberLike(String value) {
			addCriterion("wuliu_number like", value, "wuliuNumber");
			return this;
		}

		public Criteria andWuliuNumberNotLike(String value) {
			addCriterion("wuliu_number not like", value, "wuliuNumber");
			return this;
		}

		public Criteria andWuliuNumberIn(List values) {
			addCriterion("wuliu_number in", values, "wuliuNumber");
			return this;
		}

		public Criteria andWuliuNumberNotIn(List values) {
			addCriterion("wuliu_number not in", values, "wuliuNumber");
			return this;
		}

		public Criteria andWuliuNumberBetween(String value1, String value2) {
			addCriterion("wuliu_number between", value1, value2, "wuliuNumber");
			return this;
		}

		public Criteria andWuliuNumberNotBetween(String value1, String value2) {
			addCriterion("wuliu_number not between", value1, value2,
					"wuliuNumber");
			return this;
		}

		public Criteria andDescpritIsNull() {
			addCriterion("descprit is null");
			return this;
		}

		public Criteria andDescpritIsNotNull() {
			addCriterion("descprit is not null");
			return this;
		}

		public Criteria andDescpritEqualTo(String value) {
			addCriterion("descprit =", value, "descprit");
			return this;
		}

		public Criteria andDescpritNotEqualTo(String value) {
			addCriterion("descprit <>", value, "descprit");
			return this;
		}

		public Criteria andDescpritGreaterThan(String value) {
			addCriterion("descprit >", value, "descprit");
			return this;
		}

		public Criteria andDescpritGreaterThanOrEqualTo(String value) {
			addCriterion("descprit >=", value, "descprit");
			return this;
		}

		public Criteria andDescpritLessThan(String value) {
			addCriterion("descprit <", value, "descprit");
			return this;
		}

		public Criteria andDescpritLessThanOrEqualTo(String value) {
			addCriterion("descprit <=", value, "descprit");
			return this;
		}

		public Criteria andDescpritLike(String value) {
			addCriterion("descprit like", value, "descprit");
			return this;
		}

		public Criteria andDescpritNotLike(String value) {
			addCriterion("descprit not like", value, "descprit");
			return this;
		}

		public Criteria andDescpritIn(List values) {
			addCriterion("descprit in", values, "descprit");
			return this;
		}

		public Criteria andDescpritNotIn(List values) {
			addCriterion("descprit not in", values, "descprit");
			return this;
		}

		public Criteria andDescpritBetween(String value1, String value2) {
			addCriterion("descprit between", value1, value2, "descprit");
			return this;
		}

		public Criteria andDescpritNotBetween(String value1, String value2) {
			addCriterion("descprit not between", value1, value2, "descprit");
			return this;
		}

		public Criteria andStartTimeIsNull() {
			addCriterion("start_time is null");
			return this;
		}

		public Criteria andStartTimeIsNotNull() {
			addCriterion("start_time is not null");
			return this;
		}

		public Criteria andStartTimeEqualTo(Date value) {
			addCriterionForJDBCDate("start_time =", value, "startTime");
			return this;
		}

		public Criteria andStartTimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("start_time <>", value, "startTime");
			return this;
		}

		public Criteria andStartTimeGreaterThan(Date value) {
			addCriterionForJDBCDate("start_time >", value, "startTime");
			return this;
		}

		public Criteria andStartTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("start_time >=", value, "startTime");
			return this;
		}

		public Criteria andStartTimeLessThan(Date value) {
			addCriterionForJDBCDate("start_time <", value, "startTime");
			return this;
		}

		public Criteria andStartTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("start_time <=", value, "startTime");
			return this;
		}

		public Criteria andStartTimeIn(List values) {
			addCriterionForJDBCDate("start_time in", values, "startTime");
			return this;
		}

		public Criteria andStartTimeNotIn(List values) {
			addCriterionForJDBCDate("start_time not in", values, "startTime");
			return this;
		}

		public Criteria andStartTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("start_time between", value1, value2,
					"startTime");
			return this;
		}

		public Criteria andStartTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("start_time not between", value1, value2,
					"startTime");
			return this;
		}

		public Criteria andEndTimeIsNull() {
			addCriterion("end_time is null");
			return this;
		}

		public Criteria andEndTimeIsNotNull() {
			addCriterion("end_time is not null");
			return this;
		}

		public Criteria andEndTimeEqualTo(Date value) {
			addCriterionForJDBCDate("end_time =", value, "endTime");
			return this;
		}

		public Criteria andEndTimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("end_time <>", value, "endTime");
			return this;
		}

		public Criteria andEndTimeGreaterThan(Date value) {
			addCriterionForJDBCDate("end_time >", value, "endTime");
			return this;
		}

		public Criteria andEndTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("end_time >=", value, "endTime");
			return this;
		}

		public Criteria andEndTimeLessThan(Date value) {
			addCriterionForJDBCDate("end_time <", value, "endTime");
			return this;
		}

		public Criteria andEndTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("end_time <=", value, "endTime");
			return this;
		}

		public Criteria andEndTimeIn(List values) {
			addCriterionForJDBCDate("end_time in", values, "endTime");
			return this;
		}

		public Criteria andEndTimeNotIn(List values) {
			addCriterionForJDBCDate("end_time not in", values, "endTime");
			return this;
		}

		public Criteria andEndTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("end_time between", value1, value2,
					"endTime");
			return this;
		}

		public Criteria andEndTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("end_time not between", value1, value2,
					"endTime");
			return this;
		}
	}
}