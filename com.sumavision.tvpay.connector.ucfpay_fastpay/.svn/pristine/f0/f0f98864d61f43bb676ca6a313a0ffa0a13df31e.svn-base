<project name="com.sumavision.tvpay.connector.ucfpayfastpay" default="package"
	xmlns:ivy="antlib:org.apache.ivy.ant">
	<property environment="env" />
	<property name="ivy.default.ivy.user.dir" value="${env.ivy.default.ivy.user.dir}" />
	<property name="ivy.settings.file" value="${ivy.default.ivy.user.dir}/ivysettings.xml" />

	<property name="lib.dir" value="lib" />
	<property name="dist.dir" value="dist" />
	<property name="src.dir" value="src" />
	<property name="project.version" value="2.0.2-SNAPSHOT" />

	<!-- java编译参数 -->
	<property name="javac.debug" value="true" />
	<property name="javac.debuglevel" value="source,lines,vars" />
	<property name="javac.target" value="1.5" />
	<property name="javac.source" value="1.5" />
	<property name="javac.encoding" value="UTF-8" />
	<property name="javac.nowarn" value="true" />
	<property name="javac.fork" value="true" />
	<property name="javac.xmx" value="1024m" />

	<path id="lib.path.id">
		<fileset dir="${lib.dir}" />
	</path>

	<!-- ================================= target: 更新jar引用 ================================= -->
	<target name="resolve" description="--> retreive dependencies with ivy">
		<ivy:retrieve conf="default"/>
	</target>

	<!-- ================================= target: ivy报告 ================================= -->
	<target name="report" depends="resolve"
		description="--> generates a report of dependencies">
		<ivy:report todir="${dist.dir}" />
	</target>

	<!-- ================================= target: 清除ivy缓存cache ================================= -->
	<target name="clean-cache" description="--> clean the ivy cache">
		<ivy:cleancache />
	</target>


	<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->


	<!-- ================================= target: 项目编译 ================================= -->
	<target name="build" depends="resolve" description="--> compile and run the project">
		<mkdir dir="${dist.dir}/classes" />
		<copy includeemptydirs="false" todir="${dist.dir}/classes">
			<fileset dir="${src.dir}" excludes="**/*.launch, **/*.java" />
		</copy>
		<javac destdir="${dist.dir}/classes" debug="${javac.debug}"
			encoding="${javac.encoding}" memorymaximumsize="${javac.xmx}" fork="${javac.fork}"
			nowarn="${javac.nowarn}" debuglevel="${javac.debuglevel}" source="${javac.source}"
			target="${javac.target}">
			<src path="${src.dir}" />
			<classpath refid="lib.path.id" />
		</javac>
	</target>

	<!-- ================================= target: 打包 ================================= -->
	<target name="package" depends="build" description="--> compile and run the project">
		<!-- manifest.mf -->
		<pathconvert property="ext.libs" pathsep=" ">
			<map from="${basedir}/lib/" to="Web-INF/lib/" />
			<path>
				<fileset dir="${basedir}/lib">
					<exclude name="activation-1.0.jar" />
					<exclude name="appserv-admin-1.0.jar" />
					<exclude name="appserv-jstl-1.0.jar" />
					<exclude name="appserv-rt-1.0.jar" />
					<exclude name="appserv-tags-1.0.jar" />
					<exclude name="imqjmsra-1.0.jar" />
					<exclude name="javaee-1.0.jar" />
					<exclude name="jsf-impl-1.0.jar" />
					<exclude name="mail-1.0.jar" />
					<exclude name="toplink-essentials-1.0.jar" />
					<exclude name="webservices-rt-1.0.jar" />
					<exclude name="webservices-tools-1.0.jar" />
				</fileset>
			</path>
		</pathconvert>

		<mkdir dir="${dist.dir}/web/WEB-INF/lib" />
		<copy todir="${dist.dir}/web">
			<fileset dir="./WebContent">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<jar destfile="${dist.dir}/web/WEB-INF/lib/${ant.project.name}.jar">
			<fileset dir="${dist.dir}/classes">
				<include name="**/*.*" />
			</fileset>
		</jar>
		<move todir="${dist.dir}/web/WEB-INF/lib/">
			<fileset dir="./lib">
				<exclude name="activation-1.0.jar" />
				<exclude name="appserv-admin-1.0.jar" />
				<exclude name="appserv-jstl-1.0.jar" />
				<exclude name="appserv-rt-1.0.jar" />
				<exclude name="appserv-tags-1.0.jar" />
				<exclude name="imqjmsra-1.0.jar" />
				<exclude name="javaee-1.0.jar" />
				<exclude name="jsf-impl-1.0.jar" />
				<exclude name="mail-1.0.jar" />
				<exclude name="toplink-essentials-1.0.jar" />
				<exclude name="webservices-rt-1.0.jar" />
				<exclude name="webservices-tools-1.0.jar" />
			</fileset>
		</move>
		<war destfile="${dist.dir}/${ant.project.name}.war" webxml="./WebContent/WEB-INF/web.xml">
			<fileset dir="${dist.dir}/web">
			</fileset>
			<manifest>
				<attribute name="Class-Path" value=" ${ext.libs}" />
			</manifest>
		</war>
		<checksum file="${dist.dir}/${ant.project.name}.war" forceOverwrite="yes"/>

		<!-- 删除ivy临时拷贝到本地的lib目录 -->
		<delete includeemptydirs="true" failonerror="off">
			<fileset dir="${lib.dir}">
			</fileset>
			<fileset dir="${dist.dir}/web">
			</fileset>
		</delete>
	</target>

	<!-- ================================= target: 打包Handler JAR包 ================================= -->
	<target name="package-handler-jar" depends="build"
		description="--> compile and run the project">
		<!-- manifest.mf -->
		<pathconvert property="ext.libs" pathsep=" ">
			<map from="${basedir}/lib/" to="APP-INF/lib/" />
			<path>
				<fileset dir="${basedir}/lib">
					<exclude name="activation-1.0.jar" />
					<exclude name="appserv-admin-1.0.jar" />
					<exclude name="appserv-jstl-1.0.jar" />
					<exclude name="appserv-rt-1.0.jar" />
					<exclude name="appserv-tags-1.0.jar" />
					<exclude name="imqjmsra-1.0.jar" />
					<exclude name="javaee-1.0.jar" />
					<exclude name="jsf-impl-1.0.jar" />
					<exclude name="mail-1.0.jar" />
					<exclude name="toplink-essentials-1.0.jar" />
					<exclude name="webservices-rt-1.0.jar" />
					<exclude name="webservices-tools-1.0.jar" />
				</fileset>
			</path>
		</pathconvert>

		<jar destfile="${dist.dir}/${ant.project.name}.jar">
			<fileset dir="${dist.dir}/classes">
				<include name="com/sumavision/tvpay/connector/handler/*/*.class" />
			</fileset>
			<manifest>
				<attribute name="Class-Path" value=" ${ext.libs}" />
			</manifest>
		</jar>
		<!-- 删除ivy临时拷贝到本地的lib目录 -->
		<delete includeemptydirs="true" failonerror="off">
			<fileset dir="${lib.dir}">
			</fileset>
		</delete>
	</target>


	<!-- ================================= target: 清除编译结果 ================================= -->
	<target name="clean" description="--> clean the project">
		<delete includeemptydirs="true" failonerror="off">
			<fileset dir="${lib.dir}">
			</fileset>
			<fileset dir="${dist.dir}">
			</fileset>
		</delete>
	</target>

	<!-- ================================= target: 将打包结果发布到本地ivy库 ================================= -->
	<target name="publish-local" description="--> Publish Local"
		depends="package">
		<ivy:publish resolver="local" pubrevision="${project.version}"
			status="release" update="true" overwrite="true">
			<artifacts pattern="${dist.dir}/[artifact].[ext]" />
		</ivy:publish>
	</target>

	<!-- ================================= target: 将打包结果发布到远程nexus库 ================================= -->
	<target name="publish" description="--> Publish nexus" depends="package">
		<ivy:publish resolver="snapshots" pubrevision="${project.version}"
			status="release" update="true" overwrite="true" forcedeliver="true">
			<artifacts pattern="${dist.dir}/[artifact].[ext]" />
		</ivy:publish>
	</target>
</project>
